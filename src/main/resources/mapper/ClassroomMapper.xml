<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjh.classroom_db.mapper.ClassroomMapper">
  <resultMap id="BaseResultMap" type="com.zjh.classroom_db.pojo.Classroom">
    <id column="classroom_id" jdbcType="INTEGER" property="classroomId" />
    <result column="campus_id" jdbcType="INTEGER" property="campusId" />
    <result column="building_id" jdbcType="INTEGER" property="buildingId" />
    <result column="classroom_name" jdbcType="VARCHAR" property="classroomName" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    classroom_id, campus_id, building_id, classroom_name, admin_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.zjh.classroom_db.pojo.ClassroomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classroom
    where classroom_id = #{classroomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classroom
    where classroom_id = #{classroomId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zjh.classroom_db.pojo.ClassroomExample">
    delete from classroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zjh.classroom_db.pojo.Classroom">
    insert into classroom (classroom_id, campus_id, building_id, 
      classroom_name, admin_id, create_time, 
      update_time)
    values (#{classroomId,jdbcType=INTEGER}, #{campusId,jdbcType=INTEGER}, #{buildingId,jdbcType=INTEGER}, 
      #{classroomName,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zjh.classroom_db.pojo.Classroom">
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classroomId != null">
        classroom_id,
      </if>
      <if test="campusId != null">
        campus_id,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="classroomName != null">
        classroom_name,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classroomId != null">
        #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="campusId != null">
        #{campusId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="classroomName != null">
        #{classroomName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zjh.classroom_db.pojo.ClassroomExample" resultType="java.lang.Long">
    select count(*) from classroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classroom
    <set>
      <if test="record.classroomId != null">
        classroom_id = #{record.classroomId,jdbcType=INTEGER},
      </if>
      <if test="record.campusId != null">
        campus_id = #{record.campusId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=INTEGER},
      </if>
      <if test="record.classroomName != null">
        classroom_name = #{record.classroomName,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classroom
    set classroom_id = #{record.classroomId,jdbcType=INTEGER},
      campus_id = #{record.campusId,jdbcType=INTEGER},
      building_id = #{record.buildingId,jdbcType=INTEGER},
      classroom_name = #{record.classroomName,jdbcType=VARCHAR},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjh.classroom_db.pojo.Classroom">
    update classroom
    <set>
      <if test="campusId != null">
        campus_id = #{campusId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="classroomName != null">
        classroom_name = #{classroomName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where classroom_id = #{classroomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjh.classroom_db.pojo.Classroom">
    update classroom
    set campus_id = #{campusId,jdbcType=INTEGER},
      building_id = #{buildingId,jdbcType=INTEGER},
      classroom_name = #{classroomName,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where classroom_id = #{classroomId,jdbcType=INTEGER}
  </update>
</mapper>